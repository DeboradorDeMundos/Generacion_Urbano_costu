---
import BaseLayout from './BaseLayout.astro';
import BreadCrumbs from '../components/common/BreadCrumbs.astro';

export interface Props {
  title: string;
  description: string;
  canonical?: string;
  image?: string;
  category?: string;
  features?: string[];
  icon?: string;
  pricing?: {
    type: 'fixed' | 'range' | 'quote';
    price?: string;
    note?: string;
  };
  location?: {
    city?: string;
    region?: string;
  };
  breadcrumbs?: Array<{
    label: string;
    href: string;
  }>;
}

const {
  title,
  description,
  canonical,
  image,
  category,
  features = [],
  icon,
  pricing,
  location,
  breadcrumbs = []
} = Astro.props;
---

<BaseLayout
  title={title}
  description={description}
  canonical={canonical}
  image={image}
  type="article"
>
  <div class="py-8 lg:py-12">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <!-- Breadcrumbs -->
      {breadcrumbs.length > 0 && (
        <div class="mb-6">
          <BreadCrumbs items={breadcrumbs} />
        </div>
      )}

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12">
        <!-- Service Image -->
        <div class="space-y-4">
          <div class="aspect-video overflow-hidden rounded-lg bg-gray-100">
            <img
              src={image || '/images/placeholder-service.jpg'}
              alt={title}
              class="h-full w-full object-cover"
            />
          </div>
        </div>

        <!-- Service Info -->
        <div class="space-y-6">
          <!-- Category -->
          {category && (
            <div>
              <span class="inline-block rounded-full bg-primary-100 px-3 py-1 text-sm font-medium text-primary-800">
                {category}
              </span>
            </div>
          )}

          <!-- Title with Icon -->
          <div>
            <div class="flex items-center mb-4">
              {icon && (
                <div class="flex-shrink-0 mr-4">
                  <div class="h-12 w-12 rounded-lg bg-primary-100 flex items-center justify-center">
                    <span class="text-primary-600 text-2xl" set:html={icon} />
                  </div>
                </div>
              )}
              
              <h1 class="text-3xl md:text-4xl font-bold text-gray-900 font-heading">
                {title}
              </h1>
            </div>
          </div>

          <!-- Description -->
          <div class="prose prose-gray max-w-none">
            <p class="text-lg text-gray-600 leading-relaxed">
              {description}
            </p>
          </div>

          <!-- Features -->
          {features.length > 0 && (
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-3">
                ¿Qué incluye este servicio?
              </h3>
              <ul class="space-y-2">
                {features.map((feature) => (
                  <li class="flex items-start">
                    <svg class="h-5 w-5 text-green-500 mt-0.5 mr-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                    </svg>
                    <span class="text-gray-700">{feature}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          <!-- Pricing -->
          {pricing && (
            <div class="bg-gray-50 rounded-lg p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-3">
                Precios
              </h3>
              
              {pricing.type === 'fixed' && pricing.price && (
                <p class="text-2xl font-bold text-primary-600 mb-2">
                  {pricing.price}
                </p>
              )}
              
              {pricing.type === 'range' && pricing.price && (
                <p class="text-2xl font-bold text-primary-600 mb-2">
                  {pricing.price}
                </p>
              )}
              
              {pricing.type === 'quote' && (
                <p class="text-lg font-medium text-gray-900 mb-2">
                  Cotización personalizada
                </p>
              )}
              
              {pricing.note && (
                <p class="text-sm text-gray-600">
                  {pricing.note}
                </p>
              )}
            </div>
          )}

          <!-- Location -->
          {location && (location.city || location.region) && (
            <div class="flex items-center text-gray-600">
              <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
              </svg>
              <span>
                {location.city && location.region ? `${location.city}, ${location.region}` : location.city || location.region}
              </span>
            </div>
          )}

          <!-- CTA Buttons -->
          <div class="flex flex-col sm:flex-row gap-4">
            <a
              href="/contacto"
              class="flex-1 bg-primary-600 text-white text-center py-3 px-6 rounded-md font-medium hover:bg-primary-700 transition-colors"
            >
              Solicitar Presupuesto
            </a>
            <a
              href={`https://wa.me/56900000000?text=${encodeURIComponent(`Hola, me interesa el servicio: ${title}`)}`}
              class="flex-1 border border-primary-600 text-primary-600 text-center py-3 px-6 rounded-md font-medium hover:bg-primary-50 transition-colors"
              target="_blank"
              rel="noopener"
            >
              Consultar por WhatsApp
            </a>
          </div>
        </div>
      </div>

      <!-- Service Content -->
      <div class="mt-12 lg:mt-16">
        <div class="max-w-4xl">
          <div class="prose prose-lg prose-gray max-w-none">
            <slot />
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  .prose {
    @apply text-gray-700 leading-relaxed;
  }
  
  .prose h2 {
    @apply text-2xl font-bold text-gray-900 mt-8 mb-4 font-heading;
  }
  
  .prose h3 {
    @apply text-xl font-semibold text-gray-900 mt-6 mb-3 font-heading;
  }
  
  .prose h4 {
    @apply text-lg font-semibold text-gray-900 mt-4 mb-2 font-heading;
  }
  
  .prose p {
    @apply mb-4;
  }
  
  .prose ul, .prose ol {
    @apply mb-4 pl-6;
  }
  
  .prose li {
    @apply mb-2;
  }
  
  .prose a {
    @apply text-primary-600 hover:text-primary-700 underline;
  }
  
  .prose strong {
    @apply font-semibold text-gray-900;
  }
  
  .prose blockquote {
    @apply border-l-4 border-primary-200 pl-4 italic text-gray-600 my-6;
  }
  
  .prose table {
    @apply w-full border-collapse border border-gray-300 my-6;
  }
  
  .prose th, .prose td {
    @apply border border-gray-300 px-4 py-2 text-left;
  }
  
  .prose th {
    @apply bg-gray-50 font-semibold;
  }
</style>