---
export interface Props {
  title: string;
  description: string;
  image: string;
  slug: string;
  icon?: string;
  features?: string[];
}

const { title, description, image, slug, icon, features = [] } = Astro.props;
---

<div class="group relative overflow-hidden rounded-lg bg-white shadow-md transition-all hover:shadow-lg">
  <div class="aspect-video overflow-hidden">
    <img
      src={image}
      alt={title}
      class="h-full w-full object-cover transition-transform group-hover:scale-105"
      loading="lazy"
    />
  </div>
  
  <div class="p-6">
    <div class="flex items-center mb-4">
      {icon && (
        <div class="flex-shrink-0 mr-3">
          <div class="h-10 w-10 rounded-lg bg-primary-100 flex items-center justify-center">
            <span class="text-primary-600 text-xl" set:html={icon} />
          </div>
        </div>
      )}
      
      <h3 class="text-xl font-semibold text-gray-900 group-hover:text-primary-600 transition-colors">
        <a href={`/servicios/${slug}`} class="stretched-link">
          {title}
        </a>
      </h3>
    </div>
    
    <p class="text-gray-600 mb-4">
      {description}
    </p>
    
    {features.length > 0 && (
      <div class="mb-4">
        <ul class="space-y-1">
          {features.slice(0, 3).map(feature => (
            <li class="flex items-center text-sm text-gray-600">
              <svg class="h-4 w-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
              {feature}
            </li>
          ))}
        </ul>
      </div>
    )}
    
    <div class="flex items-center justify-between">
      <span class="text-sm font-medium text-primary-600 group-hover:text-primary-700">
        Conocer más →
      </span>
    </div>
  </div>
</div>